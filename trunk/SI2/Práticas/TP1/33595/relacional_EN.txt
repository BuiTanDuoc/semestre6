MEETING(ID[PK],COMMENT_ID, DATE,DETAILS);

COMMENTS(ID[PK], CUSTOMER_ID[FK], COURSES_ID[FK], GRADE, COMMENT);

CUSTOMER(ID[PK],NAME,CONTACT,TYPE);

REGISTERED(ID[PK]CUSTOMER_ID[FK],ADDRESS_ID,COUNTRY_ID);

BOOKING(ID[PK], CUSTOMER_ID[FK], DATE, NUMBER_PERSONS,TYPE);			//VALIDAR/INCREMENTAR/DECREMENTAR CONFORME SÃO FEITAS AS RESPOSTAS. // FALTA A RELAÇÃO ENTRE EVENTO E OS SEU CONVIDADOS.

EVENT(BOOKING_ID[FK], MENU_ID[FK], NAME, DESCRIPTION);
//NORMAL_BOOKING(BOOKING_ID[FK], MENU_ID[FK]); //SE TYPE=NORMAL NÃO TEM ESCOLHA DE MENU ?

MENU(ID[PK], NAME, TYPE);

COURSES(ID[PK], NAME, ACTIVE, VALUE);

INGREDIENTS(ID[PK], NAME, DESCRIPTION, QTY_RESERVED, STOCK);

SUPPLIERS(ID[PK], NAME, ADDRESS_ID, COUNTRY_ID);

INVOICES(INVOICE[PK], DATE, SUPPLIER_ID[FK], INGREDIENTS_ID[FK], QTY, VALIDITY, PRICE);

ORDERS(ID[PK],SUPPLIER_ID[FK], INGREDIENT_ID[FK], DATE, QTY_ORDERED, EXPECTED_DATE);			//e as entregas parciais?? //falta tabela _LOG
ORDERS_LOG(ID[PK],SUPPLIER_ID[FK], INGREDIENT_ID[FK], DATE, QTY_ORDERED, EXPECTED_DATE, INVOICE_ID[FK]);

COURSES_INGREDIENTS(COURSES_ID[FK], INGREDIENTS_ID[FK], QTY);	//VERIFICAR PREÇO QUANDO HÁ ALTERAÇÕES DE PREÇO NA COMPRA DE INGREDIENTES.

MENU_COURSES(COURSES_ID[FK],MENU_ID[FK]);

////BOOKING_MENU(BOOKING_ID[FK]); // SIMPLIFICAÇÃO: RESERVA(ID[PK],CARDAPIO_ID[FK], DATA, NUMERO_PESSOAS, CONFIRMACOES,TIPO);


FRIENDS(REGISTERED_IDFK],REGISTERED_ID2[FK]) ;

////COMMENT_CUSTOMER(COMMENT_ID[FK]);	//SIMPLIFICAÇÃO: COMENTARIO(ID[PK], ID_CLIENTE[FK],OBS,NOTA);

////MEETING_COMMENT(MEETING_ID[FK],MEETING_DATE[FK]);	// SIMPLIFICAÇÃO: REUNIAO(ID[PK],ID_COMENTARIO[FK], DATA,CONCLUSAO);
===========================// ===========================//===========================//===========================//===========================//
AMIGOS(ID_REGISTADO1[FK],ID_REGISTADO2[FK]) ;
  ID_REGISTADO1[FK]
    INT
    FOREING KEY Table AMIGOS
    NOT NULL
  ID_REGISTADO2[FK]
    INT
    FOREING KEY Table AMIGOS
    NOT NULL

CARDAPIO(ID[PK], DESCRICAO, CATEGORIA);
  ID[PK]
    PRIMARY KEY
    INT
    NOT NULL
    > 0

  DESCRICAO
    CHAR[255]
    NOT NULL

  CATEGORIA
    CHAR[50]
    NOT NULL

CARDAPIO_PRATOS(ID_PRATO[FK],ID_CARDAPIO[FK]);
  ID_PRATO[FK]
    INT
    FOREING KEY Table PRATO
    NOT NULL

  ID_CARDAPIO[FK]
    INT
    FOREING KEY Table CARDAPIO
    NOT NULL  

CLIENTE(ID[PK],NOME,CONTACTO,TIPO);
  ID[PK]
    PRIMARY KEY
    INT
    NOT NULL
    > 0
    
  NOME
    CHAR[100]
    NOT NULL
    
  CONTACTO
    INT
    
  TIPO
    CHAR[20]
    //NOME DA TABELA VÁLIDA
    NOT NULL

CLIENTE_RESERVA(ID_RESERVA[FK], ID_CLIENTE[FK]);
  ID_RESERVA[FK]
  ID_CLIENTE[FK]

COMPRAS(FACTURA[PK], DATA[PK], ID_FORNECEDOR[FK], ID_INGREDIENTE[FK], QUANTIDADE, VALIDADE, PREÇO);
  FACTURA[PK]
  DATA[PK]
  ID_FORNECEDOR[FK]
  ID_INGREDIENTE[FK]
  QUANTIDADE
  VALIDADE
  PREÇO  

COMENTARIO(ID[PK], ID_CLIENTE[FK],OBS,NOTA);
  ID[PK]
  ID_CLIENTE[FK]
  OBS
  NOTA

ENCOMENDAS(ID[PK],ID_FORNECEDOR[FK], ID_INGREDIENTE[FK], DATA, QUANTIDADE);			
//e as entregas parciais?? //falta tabela _LOG
  ID[PK]
  ID_FORNECEDOR[FK]
  ID_INGREDIENTE[FK]
  DATA
  QUANTIDADE
  
ENCOMENDAS_LOG(ID[PK],ID_FORNECEDOR[FK], ID_INGREDIENTE[FK], DATA, QUANTIDADE, DATA_ENTREGA[PK]);
  ID[PK]
  ID_FORNECEDOR[FK]
  ID_INGREDIENTE[FK]
  DATA
  QUANTIDADE
  DATA_ENTREGA[PK]
  
EVENTO(ID[PK],ID_RESERVA[FK], DESIGNACAO, DESCRICAO, ORGANIZADOR);
  ID[PK]
  ID_RESERVA[FK]
  DESIGNACAO
  DESCRICAO
  ORGANIZADOR  

FORNECEDORES(ID[PK], NOME, MORADA, CODIGO_POSTAL, PAIS);
  ID[PK]
  NOME
  MORADA
  CODIGO_POSTAL
  PAIS

INGREDIENTES(ID[PK], NOME, DESCRICAO, QUANTIDADE_RESERVA, QUANTIDADE ACTUAL);
  ID[PK]
  NOME
  DESCRICAO
  QUANTIDADE_RESERVA
  QUANTIDADE ACTUAL

PRATOS(ID[PK], NOME, ACTIVO, PRECO);
  ID[PK]
  NOME
  ACTIVO
  PRECO 

PRATOS_INGREDIENTES(ID_PRATO[FK], ID_INGREDIENTE[FK],QUANTIDADE, PRECO);	
//VERIFICAR PREÇO QUANDO HÁ ALTERAÇÕES DE PREÇO NA COMPRA DE INGREDIENTES.
  ID_PRATO[FK]
  ID_INGREDIENTE[FK]
  QUANTIDADE
  PRECO
  
REGISTADO(ID[PK],ID_CLIENTE[FK],ID_MORADA,NACIONALIDADE);
  ID[PK]
  ID_CLIENTE[FK]
  ID_MORADA
  NACIONALIDADE

RESERVA(ID[PK],CARDAPIO_ID[FK], DATA, NUMERO_PESSOAS, CONFIRMACOES,TIPO);
//VALIDAR/INCREMENTAR/DECREMENTAR CONFORME SÃO FEITAS AS RESPOSTAS. // FALTA A RELAÇÃO ENTRE EVENTO E OS SEU CONVIDADOS.
  ID[PK]
  CARDAPIO_ID[FK]
  DATA
  NUMERO_PESSOAS
  CONFIRMACOES
  TIPO

REUNIAO(ID[PK],ID_COMENTARIO[FK], DATA,CONCLUSAO);
  ID[PK]
  ID_COMENTARIO[FK]
  DATA
  CONCLUSAO  
===========================// ===========================//===========================//===========================//===========================//




















