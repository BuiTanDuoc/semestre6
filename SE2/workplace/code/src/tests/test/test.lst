ARM GAS  /tmp/ccNd5BhZ.s 			page 1


   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"test.c"
  12              		.section	.debug_abbrev,"",%progbits
  13              	.Ldebug_abbrev0:
  14              		.section	.debug_info,"",%progbits
  15              	.Ldebug_info0:
  16              		.section	.debug_line,"",%progbits
  17              	.Ldebug_line0:
  18 0000 B4000000 		.text
  18      02009900 
  18      00000201 
  18      FB0E0D00 
  18      01010101 
  19              	.Ltext0:
  20              		.section	.rodata
  21              		.align	2
  22              	.LC0:
  23 0000 48656C6C 		.ascii	"Hello World!\000"
  23      6F20576F 
  23      726C6421 
  23      00
  24 000d 000000   		.section	.text.main,"ax",%progbits
  25              		.align	2
  26              		.global	main
  27              		.type	main, %function
  28              	main:
  29              	.LFB10:
  30              		.file 1 "test.c"
   1:test.c        **** #include <stdio.h>
   2:test.c        **** #include <cyg/hal/hal_io.h>
   3:test.c        **** #include <cyg/infra/diag.h>
   4:test.c        **** /*
   5:test.c        **** #include "GPIO.h"
   6:test.c        **** #include "TIMER.h"
   7:test.c        **** #include "RTC.h"
   8:test.c        **** #include "TYPES.h"
   9:test.c        **** #include "startosc.h"
  10:test.c        **** #include "stdio.h"
  11:test.c        **** #include "I2C.h"
  12:test.c        **** //#include "VIC.h"
  13:test.c        **** #include "WATCHDOG.h"
  14:test.c        **** #include "SPI.h"
  15:test.c        **** #include "console.h"
  16:test.c        **** #include "Ethernet.h"
  17:test.c        **** */ 
  18:test.c        **** /*
  19:test.c        **** #define  LCD_MASK   ((U32) 0x7F00)
  20:test.c        **** 
ARM GAS  /tmp/ccNd5BhZ.s 			page 2


  21:test.c        **** #define PACKET_SIZE 1516
  22:test.c        **** 
  23:test.c        **** 
  24:test.c        **** static U8 ether_addr[] = {0x02, 0x6E, 0x75, 0x6E, 0x6F, 00};
  25:test.c        **** static U8 packet[PACKET_SIZE];
  26:test.c        **** 
  27:test.c        **** 
  28:test.c        **** void console_test(){
  29:test.c        **** 	
  30:test.c        **** 	U8 aux8;
  31:test.c        **** 	U32 aux32; 
  32:test.c        **** 	U8 hasData; 
  33:test.c        **** 	U8 out_buffer[] = {0x35, 0x7a};
  34:test.c        **** 	U8 out_buffer2[] = {0x1E , 0xFF}; 
  35:test.c        **** 	
  36:test.c        ****    console_init();
  37:test.c        ****   while(1){
  38:test.c        **** 	console_printf("LPC2106: ENC28J60-H Ethernet\n");
  39:test.c        **** 	console_write_str("------------------|.oOo.|----------------------\n\0");
  40:test.c        **** 	console_write_char('S');
  41:test.c        **** 	console_write_char('E');
  42:test.c        **** 	console_write_char('2');
  43:test.c        **** 	console_write_char('\n');
  44:test.c        **** 	console_write_str("Nuno & Nuno\n\0");
  45:test.c        **** 
  46:test.c        ****   }
  47:test.c        **** }
  48:test.c        **** 
  49:test.c        **** void spi_test(){
  50:test.c        **** 
  51:test.c        ****   const void (*irqHandler)(void);	
  52:test.c        ****   U32   clock;		     			
  53:test.c        ****   U32   chipSelect;	  				
  54:test.c        ****   U32   nbrbits:4;		  			
  55:test.c        ****   U32   mode:2;			    		
  56:test.c        ****   U32   role:1;			    		
  57:test.c        ****   U32   started:1;      			
  58:test.c        ****   U32   byteShift:1;    			
  59:test.c        **** }SPI_Device,*pSPI_Device;
  60:test.c        **** 	
  61:test.c        **** SPI_Device spis[]={ 
  62:test.c        **** 	 {
  63:test.c        ****       0,									
  64:test.c        ****       64,               					
  65:test.c        ****       1<<8,             					
  66:test.c        ****       8,                					
  67:test.c        ****       SPI_PRIOR_TO_FIRST_SCK_RISING_EDGE,
  68:test.c        ****       SPI_MASTER,    						
  69:test.c        ****       0,                					
  70:test.c        ****       SPI_MSB           					
  71:test.c        **** 	}
  72:test.c        **** };
  73:test.c        **** 	
  74:test.c        **** 	U8 out_buffer[] = {0x35, 0x7a};
  75:test.c        **** 	U8 out_buffer2[] = {0x1E , 0xFF}; 
  76:test.c        **** 	U8 in_buffer[] = {0x00, 0x00};
  77:test.c        **** 	SPI_init(spis, 1);
ARM GAS  /tmp/ccNd5BhZ.s 			page 3


  78:test.c        **** 	
  79:test.c        **** 	while(1){
  80:test.c        **** 		gpio_clear(1<<9);        
  81:test.c        **** 		gpio_set(1<<9);      
  82:test.c        **** 
  83:test.c        **** 	
  84:test.c        **** 		SPI_start_device(&spis[0]);
  85:test.c        **** 		SPI_transfer(&spis[0], sizeof(out_buffer), out_buffer, in_buffer);
  86:test.c        **** 		SPI_transfer(&spis[0], sizeof(out_buffer2), out_buffer2, in_buffer);
  87:test.c        **** 		SPI_stop_device(&spis[0]);
  88:test.c        **** 		break;
  89:test.c        ****   }
  90:test.c        **** }
  91:test.c        **** 
  92:test.c        **** void enc_test(U8 receiveTest, U8 sendTest)
  93:test.c        **** {
  94:test.c        **** 	ETHERNET_Device eth ={
  95:test.c        **** 	 {
  96:test.c        ****       0,									
  97:test.c        ****       16,               					  
  98:test.c        ****       1<<8,             					
  99:test.c        ****       8,                					
 100:test.c        ****       SPI_PRIOR_TO_FIRST_SCK_RISING_EDGE,   
 101:test.c        ****       SPI_MASTER,    						
 102:test.c        ****       0,                					
 103:test.c        ****       SPI_MSB           					
 104:test.c        **** 	},
 105:test.c        **** 	ETHERNET_FULL_DUPLEX,
 106:test.c        **** 	{0x02, 0x65, 0x7A, 0x65, 0x71, 00}
 107:test.c        **** };
 108:test.c        **** 	U32 size;
 109:test.c        **** 	console_init();
 110:test.c        **** 	console_write_str("LPC2106: ENC28J60-H Ethernet\r\n\0");
 111:test.c        **** 	Ethernet_init(&eth);
 112:test.c        **** 
 113:test.c        **** 	while (receiveTest) {
 114:test.c        **** 		Ethernet_receive(packet, PACKET_SIZE,&size);
 115:test.c        **** 		while ((size=Ethernet_receive(packet, PACKET_SIZE))) {
 116:test.c        **** 			Ethernet_receive(packet, PACKET_SIZE,&size);
 117:test.c        **** 			console_write_str("Packet received\r\n\0");
 118:test.c        **** 			console_dump_hex(packet, size);
 119:test.c        **** 		}
 120:test.c        **** 	}
 121:test.c        **** 	
 122:test.c        **** 	while (sendTest) {
 123:test.c        **** 		if (console_size() >= 0) {
 124:test.c        **** 			char c = console_read_char();
 125:test.c        **** 			console_printf("tx\n\r");
 126:test.c        **** 			U8 frame[78];
 127:test.c        **** 			memcpy(&frame[0], "\xff\xff\xff\xff\xff\xff", 6);
 128:test.c        **** 			memcpy(&frame[6], ether_addr, 6);
 129:test.c        **** 			frame[12] = (sizeof(frame) - 14) >> 8;
 130:test.c        **** 			frame[13] = (sizeof(frame) - 14);
 131:test.c        **** 			memset(&frame[14], '2', sizeof(frame) - 14);
 132:test.c        **** 			Ethernet_send(frame, sizeof(frame));
 133:test.c        **** 		}
 134:test.c        **** 	}
ARM GAS  /tmp/ccNd5BhZ.s 			page 4


 135:test.c        **** 
 136:test.c        **** }
 137:test.c        **** 
 138:test.c        **** */
 139:test.c        **** int main(){
  31              		.loc 1 139 0
  32              		@ Function supports interworking.
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35 0000 0DC0A0E1 		mov	ip, sp
  36              	.LCFI0:
  37 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
  38              	.LCFI1:
  39 0008 04B04CE2 		sub	fp, ip, #4
  40              	.LCFI2:
 140:test.c        **** /*
 141:test.c        **** 	TIMER_init(pTIMER1,58982400/MICRO);
 142:test.c        ****   TIMER_init(pTIMER0,58982400/MICRO);
 143:test.c        **** 	rtc_init();
 144:test.c        ****   VIC_init();
 145:test.c        **** 
 146:test.c        ****   console_test();
 147:test.c        ****   spi_test();
 148:test.c        **** 	enc_test(1,1);
 149:test.c        **** */
 150:test.c        ****    printf("Hello World!");
  41              		.loc 1 150 0
  42 000c 14009FE5 		ldr	r0, .L3
  43 0010 FEFFFFEB 		bl	printf
 151:test.c        **** 	return 0;
  44              		.loc 1 151 0
  45 0014 0030A0E3 		mov	r3, #0
 152:test.c        **** }
  46              		.loc 1 152 0
  47 0018 0300A0E1 		mov	r0, r3
  48 001c 0CD04BE2 		sub	sp, fp, #12
  49 0020 00689DE8 		ldmfd	sp, {fp, sp, lr}
  50 0024 1EFF2FE1 		bx	lr
  51              	.L4:
  52              		.align	2
  53              	.L3:
  54 0028 00000000 		.word	.LC0
  55              	.LFE10:
  56              		.size	main, .-main
  57              		.section	.debug_frame,"",%progbits
  58              	.Lframe0:
  59 0000 0C000000 		.4byte	.LECIE0-.LSCIE0
  60              	.LSCIE0:
  61 0004 FFFFFFFF 		.4byte	0xffffffff
  62 0008 01       		.byte	0x1
  63 0009 00       		.ascii	"\000"
  64 000a 01       		.uleb128 0x1
  65 000b 7C       		.sleb128 -4
  66 000c 0E       		.byte	0xe
  67 000d 0C       		.byte	0xc
  68 000e 0D       		.uleb128 0xd
  69 000f 00       		.uleb128 0x0
ARM GAS  /tmp/ccNd5BhZ.s 			page 5


  70              		.align	2
  71              	.LECIE0:
  72              	.LSFDE0:
  73 0010 1C000000 		.4byte	.LEFDE0-.LASFDE0
  74              	.LASFDE0:
  75 0014 00000000 		.4byte	.Lframe0
  76 0018 00000000 		.4byte	.LFB10
  77 001c 2C000000 		.4byte	.LFE10-.LFB10
  78 0020 44       		.byte	0x4
  79              		.4byte	.LCFI0-.LFB10
  80 0021 0D       		.byte	0xd
  81 0022 0C       		.uleb128 0xc
  82 0023 44       		.byte	0x4
  83              		.4byte	.LCFI1-.LCFI0
  84 0024 8E       		.byte	0x8e
  85 0025 02       		.uleb128 0x2
  86 0026 8D       		.byte	0x8d
  87 0027 03       		.uleb128 0x3
  88 0028 8B       		.byte	0x8b
  89 0029 04       		.uleb128 0x4
  90 002a 44       		.byte	0x4
  91              		.4byte	.LCFI2-.LCFI1
  92 002b 0C       		.byte	0xc
  93 002c 0B       		.uleb128 0xb
  94 002d 04       		.uleb128 0x4
  95 002e 0000     		.align	2
  96              	.LEFDE0:
  97              		.text
  98              	.Letext0:
  99              		.section	.debug_loc,"",%progbits
 100              	.Ldebug_loc0:
 101              	.LLST0:
 102 0000 00000000 		.4byte	.LFB10
 103 0004 04000000 		.4byte	.LCFI0
 104 0008 0100     		.2byte	0x1
 105 000a 5D       		.byte	0x5d
 106 000b 04000000 		.4byte	.LCFI0
 107 000f 0C000000 		.4byte	.LCFI2
 108 0013 0100     		.2byte	0x1
 109 0015 5C       		.byte	0x5c
 110 0016 0C000000 		.4byte	.LCFI2
 111 001a 2C000000 		.4byte	.LFE10
 112 001e 0200     		.2byte	0x2
 113 0020 7B       		.byte	0x7b
 114 0021 04       		.sleb128 4
 115 0022 00000000 		.4byte	0x0
 116 0026 00000000 		.4byte	0x0
 117              		.file 2 "./../../../../code/src//include_eCos/cyg/infra/cyg_type.h"
 118              		.file 3 "./../../../../code/src//include_eCos/cyg/libc/stdio/stdio.h"
 119              		.section	.debug_info
 120 0000 E0000000 		.4byte	0xe0
 121 0004 0200     		.2byte	0x2
 122 0006 00000000 		.4byte	.Ldebug_abbrev0
 123 000a 04       		.byte	0x4
 124 000b 01       		.uleb128 0x1
 125 000c 3B000000 		.4byte	.LASF14
 126 0010 01       		.byte	0x1
ARM GAS  /tmp/ccNd5BhZ.s 			page 6


 127 0011 0E000000 		.4byte	.LASF15
 128 0015 47000000 		.4byte	.LASF16
 129 0019 00000000 		.4byte	0x0
 130 001d 00000000 		.4byte	0x0
 131 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 132 0025 00000000 		.4byte	.Ldebug_line0
 133 0029 02       		.uleb128 0x2
 134 002a 04       		.byte	0x4
 135 002b 07       		.byte	0x7
 136 002c AD000000 		.4byte	.LASF0
 137 0030 03       		.uleb128 0x3
 138 0031 04       		.byte	0x4
 139 0032 05       		.byte	0x5
 140 0033 696E7400 		.ascii	"int\000"
 141 0037 02       		.uleb128 0x2
 142 0038 01       		.byte	0x1
 143 0039 08       		.byte	0x8
 144 003a 1A000000 		.4byte	.LASF1
 145 003e 02       		.uleb128 0x2
 146 003f 01       		.byte	0x1
 147 0040 06       		.byte	0x6
 148 0041 F9000000 		.4byte	.LASF2
 149 0045 02       		.uleb128 0x2
 150 0046 02       		.byte	0x2
 151 0047 07       		.byte	0x7
 152 0048 28000000 		.4byte	.LASF3
 153 004c 02       		.uleb128 0x2
 154 004d 02       		.byte	0x2
 155 004e 05       		.byte	0x5
 156 004f E4000000 		.4byte	.LASF4
 157 0053 04       		.uleb128 0x4
 158 0054 EE000000 		.4byte	.LASF7
 159 0058 02       		.byte	0x2
 160 0059 DB       		.byte	0xdb
 161 005a 29000000 		.4byte	0x29
 162 005e 02       		.uleb128 0x2
 163 005f 08       		.byte	0x8
 164 0060 07       		.byte	0x7
 165 0061 BA000000 		.4byte	.LASF5
 166 0065 02       		.uleb128 0x2
 167 0066 08       		.byte	0x8
 168 0067 05       		.byte	0x5
 169 0068 D1000000 		.4byte	.LASF6
 170 006c 05       		.uleb128 0x5
 171 006d 96000000 		.4byte	.LASF8
 172 0071 02       		.byte	0x2
 173 0072 0501     		.2byte	0x105
 174 0074 53000000 		.4byte	0x53
 175 0078 04       		.uleb128 0x4
 176 0079 15000000 		.4byte	.LASF9
 177 007d 03       		.byte	0x3
 178 007e 67       		.byte	0x67
 179 007f 83000000 		.4byte	0x83
 180 0083 06       		.uleb128 0x6
 181 0084 6C000000 		.4byte	0x6c
 182 0088 94000000 		.4byte	0x94
 183 008c 07       		.uleb128 0x7
ARM GAS  /tmp/ccNd5BhZ.s 			page 7


 184 008d 94000000 		.4byte	0x94
 185 0091 0E27     		.2byte	0x270e
 186 0093 00       		.byte	0x0
 187 0094 08       		.uleb128 0x8
 188 0095 04       		.byte	0x4
 189 0096 07       		.byte	0x7
 190 0097 02       		.uleb128 0x2
 191 0098 01       		.byte	0x1
 192 0099 08       		.byte	0x8
 193 009a DF000000 		.4byte	.LASF10
 194 009e 09       		.uleb128 0x9
 195 009f 01       		.byte	0x1
 196 00a0 A2000000 		.4byte	.LASF17
 197 00a4 01       		.byte	0x1
 198 00a5 8B       		.byte	0x8b
 199 00a6 30000000 		.4byte	0x30
 200 00aa 00000000 		.4byte	.LFB10
 201 00ae 2C000000 		.4byte	.LFE10
 202 00b2 00000000 		.4byte	.LLST0
 203 00b6 0A       		.uleb128 0xa
 204 00b7 A7000000 		.4byte	.LASF11
 205 00bb 03       		.byte	0x3
 206 00bc 72       		.byte	0x72
 207 00bd C3000000 		.4byte	0xc3
 208 00c1 01       		.byte	0x1
 209 00c2 01       		.byte	0x1
 210 00c3 0B       		.uleb128 0xb
 211 00c4 04       		.byte	0x4
 212 00c5 78000000 		.4byte	0x78
 213 00c9 0A       		.uleb128 0xa
 214 00ca 07000000 		.4byte	.LASF12
 215 00ce 03       		.byte	0x3
 216 00cf 72       		.byte	0x72
 217 00d0 C3000000 		.4byte	0xc3
 218 00d4 01       		.byte	0x1
 219 00d5 01       		.byte	0x1
 220 00d6 0A       		.uleb128 0xa
 221 00d7 00000000 		.4byte	.LASF13
 222 00db 03       		.byte	0x3
 223 00dc 72       		.byte	0x72
 224 00dd C3000000 		.4byte	0xc3
 225 00e1 01       		.byte	0x1
 226 00e2 01       		.byte	0x1
 227 00e3 00       		.byte	0x0
 228              		.section	.debug_abbrev
 229 0000 01       		.uleb128 0x1
 230 0001 11       		.uleb128 0x11
 231 0002 01       		.byte	0x1
 232 0003 25       		.uleb128 0x25
 233 0004 0E       		.uleb128 0xe
 234 0005 13       		.uleb128 0x13
 235 0006 0B       		.uleb128 0xb
 236 0007 03       		.uleb128 0x3
 237 0008 0E       		.uleb128 0xe
 238 0009 1B       		.uleb128 0x1b
 239 000a 0E       		.uleb128 0xe
 240 000b 11       		.uleb128 0x11
ARM GAS  /tmp/ccNd5BhZ.s 			page 8


 241 000c 01       		.uleb128 0x1
 242 000d 52       		.uleb128 0x52
 243 000e 01       		.uleb128 0x1
 244 000f 55       		.uleb128 0x55
 245 0010 06       		.uleb128 0x6
 246 0011 10       		.uleb128 0x10
 247 0012 06       		.uleb128 0x6
 248 0013 00       		.byte	0x0
 249 0014 00       		.byte	0x0
 250 0015 02       		.uleb128 0x2
 251 0016 24       		.uleb128 0x24
 252 0017 00       		.byte	0x0
 253 0018 0B       		.uleb128 0xb
 254 0019 0B       		.uleb128 0xb
 255 001a 3E       		.uleb128 0x3e
 256 001b 0B       		.uleb128 0xb
 257 001c 03       		.uleb128 0x3
 258 001d 0E       		.uleb128 0xe
 259 001e 00       		.byte	0x0
 260 001f 00       		.byte	0x0
 261 0020 03       		.uleb128 0x3
 262 0021 24       		.uleb128 0x24
 263 0022 00       		.byte	0x0
 264 0023 0B       		.uleb128 0xb
 265 0024 0B       		.uleb128 0xb
 266 0025 3E       		.uleb128 0x3e
 267 0026 0B       		.uleb128 0xb
 268 0027 03       		.uleb128 0x3
 269 0028 08       		.uleb128 0x8
 270 0029 00       		.byte	0x0
 271 002a 00       		.byte	0x0
 272 002b 04       		.uleb128 0x4
 273 002c 16       		.uleb128 0x16
 274 002d 00       		.byte	0x0
 275 002e 03       		.uleb128 0x3
 276 002f 0E       		.uleb128 0xe
 277 0030 3A       		.uleb128 0x3a
 278 0031 0B       		.uleb128 0xb
 279 0032 3B       		.uleb128 0x3b
 280 0033 0B       		.uleb128 0xb
 281 0034 49       		.uleb128 0x49
 282 0035 13       		.uleb128 0x13
 283 0036 00       		.byte	0x0
 284 0037 00       		.byte	0x0
 285 0038 05       		.uleb128 0x5
 286 0039 16       		.uleb128 0x16
 287 003a 00       		.byte	0x0
 288 003b 03       		.uleb128 0x3
 289 003c 0E       		.uleb128 0xe
 290 003d 3A       		.uleb128 0x3a
 291 003e 0B       		.uleb128 0xb
 292 003f 3B       		.uleb128 0x3b
 293 0040 05       		.uleb128 0x5
 294 0041 49       		.uleb128 0x49
 295 0042 13       		.uleb128 0x13
 296 0043 00       		.byte	0x0
 297 0044 00       		.byte	0x0
ARM GAS  /tmp/ccNd5BhZ.s 			page 9


 298 0045 06       		.uleb128 0x6
 299 0046 01       		.uleb128 0x1
 300 0047 01       		.byte	0x1
 301 0048 49       		.uleb128 0x49
 302 0049 13       		.uleb128 0x13
 303 004a 01       		.uleb128 0x1
 304 004b 13       		.uleb128 0x13
 305 004c 00       		.byte	0x0
 306 004d 00       		.byte	0x0
 307 004e 07       		.uleb128 0x7
 308 004f 21       		.uleb128 0x21
 309 0050 00       		.byte	0x0
 310 0051 49       		.uleb128 0x49
 311 0052 13       		.uleb128 0x13
 312 0053 2F       		.uleb128 0x2f
 313 0054 05       		.uleb128 0x5
 314 0055 00       		.byte	0x0
 315 0056 00       		.byte	0x0
 316 0057 08       		.uleb128 0x8
 317 0058 24       		.uleb128 0x24
 318 0059 00       		.byte	0x0
 319 005a 0B       		.uleb128 0xb
 320 005b 0B       		.uleb128 0xb
 321 005c 3E       		.uleb128 0x3e
 322 005d 0B       		.uleb128 0xb
 323 005e 00       		.byte	0x0
 324 005f 00       		.byte	0x0
 325 0060 09       		.uleb128 0x9
 326 0061 2E       		.uleb128 0x2e
 327 0062 00       		.byte	0x0
 328 0063 3F       		.uleb128 0x3f
 329 0064 0C       		.uleb128 0xc
 330 0065 03       		.uleb128 0x3
 331 0066 0E       		.uleb128 0xe
 332 0067 3A       		.uleb128 0x3a
 333 0068 0B       		.uleb128 0xb
 334 0069 3B       		.uleb128 0x3b
 335 006a 0B       		.uleb128 0xb
 336 006b 49       		.uleb128 0x49
 337 006c 13       		.uleb128 0x13
 338 006d 11       		.uleb128 0x11
 339 006e 01       		.uleb128 0x1
 340 006f 12       		.uleb128 0x12
 341 0070 01       		.uleb128 0x1
 342 0071 40       		.uleb128 0x40
 343 0072 06       		.uleb128 0x6
 344 0073 00       		.byte	0x0
 345 0074 00       		.byte	0x0
 346 0075 0A       		.uleb128 0xa
 347 0076 34       		.uleb128 0x34
 348 0077 00       		.byte	0x0
 349 0078 03       		.uleb128 0x3
 350 0079 0E       		.uleb128 0xe
 351 007a 3A       		.uleb128 0x3a
 352 007b 0B       		.uleb128 0xb
 353 007c 3B       		.uleb128 0x3b
 354 007d 0B       		.uleb128 0xb
ARM GAS  /tmp/ccNd5BhZ.s 			page 10


 355 007e 49       		.uleb128 0x49
 356 007f 13       		.uleb128 0x13
 357 0080 3F       		.uleb128 0x3f
 358 0081 0C       		.uleb128 0xc
 359 0082 3C       		.uleb128 0x3c
 360 0083 0C       		.uleb128 0xc
 361 0084 00       		.byte	0x0
 362 0085 00       		.byte	0x0
 363 0086 0B       		.uleb128 0xb
 364 0087 0F       		.uleb128 0xf
 365 0088 00       		.byte	0x0
 366 0089 0B       		.uleb128 0xb
 367 008a 0B       		.uleb128 0xb
 368 008b 49       		.uleb128 0x49
 369 008c 13       		.uleb128 0x13
 370 008d 00       		.byte	0x0
 371 008e 00       		.byte	0x0
 372 008f 00       		.byte	0x0
 373              		.section	.debug_pubnames,"",%progbits
 374 0000 17000000 		.4byte	0x17
 375 0004 0200     		.2byte	0x2
 376 0006 00000000 		.4byte	.Ldebug_info0
 377 000a E4000000 		.4byte	0xe4
 378 000e 9E000000 		.4byte	0x9e
 379 0012 6D61696E 		.ascii	"main\000"
 379      00
 380 0017 00000000 		.4byte	0x0
 381              		.section	.debug_aranges,"",%progbits
 382 0000 1C000000 		.4byte	0x1c
 383 0004 0200     		.2byte	0x2
 384 0006 00000000 		.4byte	.Ldebug_info0
 385 000a 04       		.byte	0x4
 386 000b 00       		.byte	0x0
 387 000c 0000     		.2byte	0x0
 388 000e 0000     		.2byte	0x0
 389 0010 00000000 		.4byte	.LFB10
 390 0014 2C000000 		.4byte	.LFE10-.LFB10
 391 0018 00000000 		.4byte	0x0
 392 001c 00000000 		.4byte	0x0
 393              		.section	.debug_ranges,"",%progbits
 394              	.Ldebug_ranges0:
 395 0000 00000000 		.4byte	.Ltext0
 396 0004 00000000 		.4byte	.Letext0
 397 0008 00000000 		.4byte	.LFB10
 398 000c 2C000000 		.4byte	.LFE10
 399 0010 00000000 		.4byte	0x0
 400 0014 00000000 		.4byte	0x0
 401              		.section	.debug_str,"MS",%progbits,1
 402              	.LASF13:
 403 0000 73746465 		.ascii	"stderr\000"
 403      727200
 404              	.LASF12:
 405 0007 7374646F 		.ascii	"stdout\000"
 405      757400
 406              	.LASF15:
 407 000e 74657374 		.ascii	"test.c\000"
 407      2E6300
ARM GAS  /tmp/ccNd5BhZ.s 			page 11


 408              	.LASF9:
 409 0015 46494C45 		.ascii	"FILE\000"
 409      00
 410              	.LASF1:
 411 001a 756E7369 		.ascii	"unsigned char\000"
 411      676E6564 
 411      20636861 
 411      7200
 412              	.LASF3:
 413 0028 73686F72 		.ascii	"short unsigned int\000"
 413      7420756E 
 413      7369676E 
 413      65642069 
 413      6E7400
 414              	.LASF14:
 415 003b 474E5520 		.ascii	"GNU C 4.3.2\000"
 415      4320342E 
 415      332E3200 
 416              	.LASF16:
 417 0047 2F686F6D 		.ascii	"/home/masterzdran/WorkingArea/Isel/semestre6/SE2/wo"
 417      652F6D61 
 417      73746572 
 417      7A647261 
 417      6E2F576F 
 418 007a 726B706C 		.ascii	"rkplace/code/src/tests/test\000"
 418      6163652F 
 418      636F6465 
 418      2F737263 
 418      2F746573 
 419              	.LASF8:
 420 0096 4359475F 		.ascii	"CYG_ADDRESS\000"
 420      41444452 
 420      45535300 
 421              	.LASF17:
 422 00a2 6D61696E 		.ascii	"main\000"
 422      00
 423              	.LASF11:
 424 00a7 73746469 		.ascii	"stdin\000"
 424      6E00
 425              	.LASF0:
 426 00ad 756E7369 		.ascii	"unsigned int\000"
 426      676E6564 
 426      20696E74 
 426      00
 427              	.LASF5:
 428 00ba 6C6F6E67 		.ascii	"long long unsigned int\000"
 428      206C6F6E 
 428      6720756E 
 428      7369676E 
 428      65642069 
 429              	.LASF6:
 430 00d1 6C6F6E67 		.ascii	"long long int\000"
 430      206C6F6E 
 430      6720696E 
 430      7400
 431              	.LASF10:
 432 00df 63686172 		.ascii	"char\000"
ARM GAS  /tmp/ccNd5BhZ.s 			page 12


 432      00
 433              	.LASF4:
 434 00e4 73686F72 		.ascii	"short int\000"
 434      7420696E 
 434      7400
 435              	.LASF7:
 436 00ee 6379675F 		.ascii	"cyg_uint32\000"
 436      75696E74 
 436      333200
 437              	.LASF2:
 438 00f9 7369676E 		.ascii	"signed char\000"
 438      65642063 
 438      68617200 
 439              		.ident	"GCC: (eCosCentric GNU tools 4.3.2-sw) 4.3.2"
ARM GAS  /tmp/ccNd5BhZ.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 test.c
     /tmp/ccNd5BhZ.s:28     .text.main:00000000 main
     /tmp/ccNd5BhZ.s:35     .text.main:00000000 $a
     /tmp/ccNd5BhZ.s:54     .text.main:00000028 $d
     /tmp/ccNd5BhZ.s:102    .debug_loc:00000000 $d

UNDEFINED SYMBOLS
printf
